

----------------------------------------   BLOCKUSER FOR APP AND IP -------------------------------------------------------------------------------------
USE [master]
GO

/****** Object:  DdlTrigger [tri_VerificaUsuario]    Script Date: 12/7/2023 6:25:32 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO


CREATE TRIGGER [tri_VerificaUsuario]
ON ALL SERVER
FOR LOGON
AS
DECLARE @Ip varchar(15)
BEGIN
IF ( ORIGINAL_LOGIN()= 'user1'  OR
	 ORIGINAL_LOGIN()= 'user2'  OR
	 ORIGINAL_LOGIN()= 'user3'  OR

)
and
( APP_NAME()='Microsoft SQL Server Management Studio - Query' OR
APP_NAME()='Microsoft SQL Server Management Studio' OR
APP_NAME()='Microsoft SQL Server Management Studio Express - Query' OR
APP_NAME()='Query Tool (using ADO) Application for Windows NT operating system.' OR
APP_NAME()='Analizador de consultas SQL' OR
APP_NAME()='HeidiSQL' OR
APP_NAME()='Aqua_Data_Studio' OR
APP_NAME()='Microsoft SQL Server Management Studio - Transact-SQL IntelliSense' OR
APP_NAME()='SQL Query Analyzer' OR
APP_NAME()='SISTEMA_VR_OR'
)
OR (ORIGINAL_LOGIN()= 'EjecutaSps' )
BEGIN
ROLLBACK;
SET @Ip = (SELECT client_net_address FROM sys.dm_exec_connections WHERE session_id = @@spid)
PRINT'Usuario invalido, ' + CONVERT(varchar(50),ORIGINAL_LOGIN()) + ', Aplicacion: ' + CONVERT(varchar(100),APP_NAME()) + ', HostName: ' + RTRIM(LTRIM (HOST_NAME() ))+ ', Ip: ' + @Ip;
END
END
GO

ENABLE TRIGGER [tri_VerificaUsuario] ON ALL SERVER
GO





 
----------------------------------------     OPCION 2 LOGIN SAVE -------------------------------------------------------------------------------------


*********** CREAR TABLA ***********

CREATE TABLE LoginAttempts (
    LoginAttemptID INT PRIMARY KEY IDENTITY(1,1),
    UserName NVARCHAR(50),
    AttemptDateTime DATETIME,
    IPAddress NVARCHAR(50),
    ApplicationName NVARCHAR(128),
    HostName NVARCHAR(128),
    DatabaseName NVARCHAR(128),
    LoginType NVARCHAR(50),
    EventType NVARCHAR(128) -- Nueva columna para almacenar el tipo de evento
);
GO

*********** CREAR PROCEDURE ***********

USE master;
GO

alter PROCEDURE dbo.sp_RegistrarLogin
    @userName NVARCHAR(100),
    @eventType NVARCHAR(128),
    @ipAddress NVARCHAR(100),
    @appName NVARCHAR(128),
    @hostName NVARCHAR(128),
    @databaseName NVARCHAR(128),
    @loginType NVARCHAR(100)
WITH EXECUTE AS OWNER
AS
BEGIN
    INSERT INTO [Master].[dbo].[LoginAttempts]
    (UserName, AttemptDateTime, IPAddress, ApplicationName, HostName, DatabaseName, LoginType, EventType)
    VALUES (@userName, GETDATE(), @ipAddress, @appName, @hostName, @databaseName, @loginType, @eventType);
END
GO



*********** CREAR TRIGGER ***********

--- DROP TRIGGER [LoginAttemptTrigger] ON ALL SERVER

CREATE TRIGGER [LoginAttemptTrigger]
ON ALL SERVER
FOR LOGON
AS
BEGIN
    DECLARE @appName NVARCHAR(500) = APP_NAME();

    IF LOWER(@appName) LIKE '%management%'
    BEGIN
        DECLARE @eventType NVARCHAR(128) = EVENTDATA().value('(/EVENT_INSTANCE/EventType)[1]', 'NVARCHAR(128)');
        DECLARE @userName NVARCHAR(100) = EVENTDATA().value('(/EVENT_INSTANCE/LoginName)[1]', 'NVARCHAR(100)');
        DECLARE @ipAddress NVARCHAR(100) = EVENTDATA().value('(/EVENT_INSTANCE/ClientHost)[1]', 'NVARCHAR(100)');
    
        DECLARE @hostName NVARCHAR(128) = HOST_NAME();
        DECLARE @databaseName NVARCHAR(128) = DB_NAME();
        DECLARE @loginType NVARCHAR(100) = EVENTDATA().value('(/EVENT_INSTANCE/LoginType)[1]', 'NVARCHAR(100)');

        EXEC master.dbo.sp_RegistrarLogin
            @userName = @userName,
            @eventType = @eventType,
            @ipAddress = @ipAddress,
            @appName = @appName,
            @hostName = @hostName,
            @databaseName = @databaseName,
            @loginType = @loginType;
    END

END
 
 
GO


*********** Otorgar permisos y habilitar trigger ***********
  
  
GRANT EXECUTE ON OBJECT::master.dbo.sp_RegistrarLogin TO public;

-- disable TRIGGER [LoginAttemptTrigger] ON ALL SERVER
ENABLE TRIGGER [LoginAttemptTrigger] ON ALL SERVER
GO
  

*********** Validaciones ***********

  
select * from [Pruebas].[dbo].[LoginAttempts] ; -- truncate  table [Pruebas].[dbo].[LoginAttempts]

select * from [Master].[dbo].[LoginAttempts] -- truncate  table [Master].[dbo].[LoginAttempts]


EXEC sp_readerrorlog 0, 1, 'Login failed'


-- https://www.mssqltips.com/sqlservertip/1750/automate-collection-and-saving-of-failed-logins-for-sql-server/


